{"version":3,"sources":["context/TableProvider.js","components/Rows/ClassRow.js","components/Rows/DepartmentRow.js","components/Rows/MajorRow.js","components/Rows/ProjectRow.js","components/Rows/StudentRow.js","components/InputRow.js","components/NavBar.js","components/EditDeleteButton.js","constants/headers.js","components/DynamicTable.js","pages/TablesPage.js","App.js","reportWebVitals.js","index.js"],"names":["TableContext","createContext","TableProvider","children","useState","tableType","setTableType","studentTable","setStudentTable","classTable","setClassTable","projectTable","setProjectTable","majorTable","setMajorTable","value","data","student","table","setTable","class","project","major","department","Provider","ClassRow","undefined","name","size","instructor","formData","setFormData","useContext","onClickClass","e","a","preventDefault","axios","post","response","id","className","form","sm","for","type","onChange","target","color","onClick","DepartmentRow","departmentID","onClickDepartment","MajorRow","majorID","onClickMajor","ProjectRow","points","onClickProject","StudentRow","age","email","onClickStudent","InputRow","exact","path","render","component","NavBar","isOpen","setIsOpen","expand","dark","navbar","left","nav","caret","tag","MDBNavLink","to","EditDeleteButton","onEdit","onDelete","floating","icon","tableHeaderChooser","label","field","sort","width","DynamicTable","props","dataObj","studentData","columns","rows","map","obj","button","test","TablesPage","studentFetch","useFetch","depends","classFetch","projectFetch","departmentFetch","majorFetch","dataObject","useEffect","window","location","pathname","substring","console","log","isLoading","Object","entries","keyVal","autoWidth","scrollY","scrollX","maxHeight","striped","sortable","responsive","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e60d214.chunk.js","sourcesContent":["import { createContext, useState } from 'react'\r\n\r\nexport const TableContext = createContext()\r\n\r\nexport const TableProvider = ({ children }) => {\r\n    const [tableType, setTableType] = useState()\r\n    const [studentTable, setStudentTable] = useState()\r\n    const [classTable, setClassTable] = useState()\r\n    const [projectTable, setProjectTable] = useState()\r\n    const [majorTable, setMajorTable] = useState()\r\n    const [departmentTable, setDepartmentTable] = useState()\r\n\r\n    const value = {\r\n        tableType,\r\n        setTableType,\r\n        data: {\r\n            student: { table: studentTable, setTable: setStudentTable },\r\n            class: { table: classTable, setTable: setClassTable },\r\n            project: { table: projectTable, setTable: setProjectTable },\r\n            major: { table: majorTable, setTable: setMajorTable },\r\n            department: {\r\n                table: departmentTable,\r\n                setTable: setDepartmentTable,\r\n            },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <TableContext.Provider value={value}>{children}</TableContext.Provider>\r\n    )\r\n}\r\n","import { Button, Form, FormGroup, Input, Label, Col, Row } from 'reactstrap'\r\nimport { useContext, useState } from 'react'\r\nimport { TableContext } from '../../context/TableProvider'\r\nimport axios from 'axios'\r\n\r\nexport const ClassRow = () => {\r\n    const [formData, setFormData] = useState({\r\n        'course-num': undefined,\r\n        department: undefined,\r\n        name: undefined,\r\n        size: undefined,\r\n        instructor: undefined,\r\n    })\r\n    const { data } = useContext(TableContext)\r\n    const onClickClass = async (e) => {\r\n        e.preventDefault()\r\n        // TODO: call api POST request function here\r\n        // const tableWithAddedData = [...data.class.table, formData]\r\n        // data.class.setTable(tableWithAddedData)\r\n        const response = await axios.post('', formData)\r\n        data.class.setTable(response.data)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            id=\"add-row\"\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n        >\r\n            <Form>\r\n                <Row form>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"course-num\" sm={10}>\r\n                                Course Num\r\n                            </Label>\r\n                            <Input\r\n                                id=\"course-num\"\r\n                                name=\"course-num\"\r\n                                type=\"number\"\r\n                                size={10}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"department\" sm={2}>\r\n                                Department\r\n                            </Label>\r\n                            <Input\r\n                                id=\"department\"\r\n                                name=\"department\"\r\n                                type=\"text\"\r\n                                size={20}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"name\" sm={2}>\r\n                                Name\r\n                            </Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                size={20}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"size\" sm={2}>\r\n                                Size\r\n                            </Label>\r\n                            <Input\r\n                                id=\"size\"\r\n                                name=\"size\"\r\n                                type=\"number\"\r\n                                size={10}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"instructor\" sm={2}>\r\n                                Instructor\r\n                            </Label>\r\n                            <Input\r\n                                id=\"instructor\"\r\n                                name=\"instructor\"\r\n                                type=\"text\"\r\n                                size={20}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Button\r\n                        color=\"blue-grey\"\r\n                        className=\"h-25 m-auto\"\r\n                        onClick={onClickClass}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Form, FormGroup, Input, Label, Col, Row } from 'reactstrap'\r\nimport { useContext, useState } from 'react'\r\nimport { TableContext } from '../../context/TableProvider'\r\nimport axios from 'axios'\r\n\r\nexport const DepartmentRow = () => {\r\n    const [formData, setFormData] = useState({\r\n        departmentID: undefined,\r\n        name: undefined,\r\n    })\r\n    const { data } = useContext(TableContext)\r\n    const onClickDepartment = async (e) => {\r\n        e.preventDefault()\r\n        // TODO: call api POST request function here\r\n        // const tableWithAddedData = [...data.department.table, formData]\r\n        // data.department.setTable(tableWithAddedData)\r\n        const response = await axios.post('', formData)\r\n        data.department.setTable(response.data)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            id=\"add-row\"\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n        >\r\n            <Form>\r\n                <Row form>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"departmentId\" sm={10}>\r\n                                Department ID\r\n                            </Label>\r\n                            <Input\r\n                                id=\"departmentId\"\r\n                                name=\"departmentId\"\r\n                                type=\"number\"\r\n                                size={10}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"name\" sm={2}>\r\n                                Name\r\n                            </Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                size={20}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Button\r\n                        color=\"blue-grey\"\r\n                        className=\"h-25 m-auto\"\r\n                        onClick={onClickDepartment}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Form, FormGroup, Input, Label, Col, Row } from 'reactstrap'\r\nimport { useContext, useState } from 'react'\r\nimport { TableContext } from '../../context/TableProvider'\r\nimport axios from 'axios'\r\n\r\nexport const MajorRow = () => {\r\n    const [formData, setFormData] = useState({\r\n        majorID: undefined,\r\n        name: undefined,\r\n    })\r\n    const { data } = useContext(TableContext)\r\n    const onClickMajor = async (e) => {\r\n        e.preventDefault()\r\n        // TODO: call api POST request function here\r\n        // const tableWithAddedData = [...data.major.table, formData]\r\n        // data.major.setTable(tableWithAddedData)\r\n        const response = await axios.post('', formData)\r\n        data.major.setTable(response.data)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            id=\"add-row\"\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n        >\r\n            <Form>\r\n                <Row form>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"majorId\" sm={10}>\r\n                                Major ID\r\n                            </Label>\r\n                            <Input\r\n                                id=\"majorId\"\r\n                                name=\"majorId\"\r\n                                type=\"number\"\r\n                                size={10}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"name\" sm={2}>\r\n                                Name\r\n                            </Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                size={20}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Button\r\n                        color=\"blue-grey\"\r\n                        className=\"h-25 m-auto\"\r\n                        onClick={onClickMajor}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Form, FormGroup, Input, Label, Col, Row } from 'reactstrap'\r\nimport { useContext, useState } from 'react'\r\nimport { TableContext } from '../../context/TableProvider'\r\nimport axios from 'axios'\r\n\r\nexport const ProjectRow = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: undefined,\r\n        points: undefined,\r\n        'group-size': undefined,\r\n    })\r\n    const { data } = useContext(TableContext)\r\n    const onClickProject = async (e) => {\r\n        e.preventDefault()\r\n        // TODO: call api POST request function here\r\n        // const tableWithAddedData = [...data.project.table, formData]\r\n        // data.project.setTable(tableWithAddedData)\r\n        const response = await axios.post('', formData)\r\n        data.project.setTable(response.data)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            id=\"add-row\"\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n        >\r\n            <Form>\r\n                <Row form>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"name\" sm={2}>\r\n                                Name\r\n                            </Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                size={10}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"points\" sm={2}>\r\n                                Points\r\n                            </Label>\r\n                            <Input\r\n                                id=\"points\"\r\n                                name=\"points\"\r\n                                type=\"number\"\r\n                                size={10}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"group-size\" sm={10}>\r\n                                Group Size\r\n                            </Label>\r\n                            <Input\r\n                                id=\"group-size\"\r\n                                name=\"group-size\"\r\n                                type=\"number\"\r\n                                size={10}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Button\r\n                        color=\"blue-grey\"\r\n                        className=\"h-25 m-auto\"\r\n                        onClick={onClickProject}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Form, FormGroup, Input, Label, Col, Row } from 'reactstrap'\r\nimport { useContext, useState } from 'react'\r\nimport { TableContext } from '../../context/TableProvider'\r\nimport axios from 'axios'\r\n\r\nexport const StudentRow = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: undefined,\r\n        age: undefined,\r\n        major: undefined,\r\n        email: undefined,\r\n    })\r\n    const { data } = useContext(TableContext)\r\n\r\n    const onClickStudent = async (e) => {\r\n        e.preventDefault()\r\n        // TODO: call api POST request function here\r\n        // const tableWithAddedData = [...data.student.table, formData]\r\n        // data.student.setTable(tableWithAddedData)\r\n        const response = await axios.post('', formData)\r\n        data.student.setTable(response.data)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            id=\"add-row\"\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n        >\r\n            <Form>\r\n                <Row form>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"name\" sm={2}>\r\n                                Name\r\n                            </Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                size={20}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"age\" sm={2}>\r\n                                Age\r\n                            </Label>\r\n                            <Input\r\n                                id=\"age\"\r\n                                name=\"age\"\r\n                                type=\"number\"\r\n                                size={10}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"major\" sm={2}>\r\n                                Major\r\n                            </Label>\r\n                            <Input\r\n                                id=\"major\"\r\n                                name=\"major\"\r\n                                type=\"text\"\r\n                                size={20}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm={20}>\r\n                        <FormGroup>\r\n                            <Label for=\"email\" sm={2}>\r\n                                Email\r\n                            </Label>\r\n                            <Input\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                size={20}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        [e.target.name]: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Button\r\n                        color=\"blue-grey\"\r\n                        className=\"h-25 m-auto\"\r\n                        onClick={onClickStudent}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { ClassRow } from './Rows/ClassRow'\r\nimport { DepartmentRow } from './Rows/DepartmentRow'\r\nimport { MajorRow } from './Rows/MajorRow'\r\nimport { ProjectRow } from './Rows/ProjectRow'\r\nimport { StudentRow } from './Rows/StudentRow'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nexport const InputRow = () => (\r\n    <Switch>\r\n        <Route\r\n            exact\r\n            path=\"/projectify\"\r\n            render={() => (\r\n                <h1 className=\"blue-grey-text text-center\">\r\n                    Select a Table to display using the dropdown above\r\n                </h1>\r\n            )}\r\n        />\r\n        <Route exact path=\"/projectify/student\" component={StudentRow} />\r\n        <Route exact path=\"/projectify/class\" component={ClassRow} />\r\n        <Route exact path=\"/projectify/major\" component={MajorRow} />\r\n        <Route exact path=\"/projectify/project\" component={ProjectRow} />\r\n        <Route exact path=\"/projectify/department\" component={DepartmentRow} />\r\n    </Switch>\r\n)\r\n","import { useContext, useState } from 'react'\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarBrand,\r\n    MDBNavbarNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBNavbarToggler,\r\n    MDBCollapse,\r\n    MDBDropdown,\r\n    MDBDropdownToggle,\r\n    MDBDropdownMenu,\r\n    MDBDropdownItem,\r\n} from 'mdbreact'\r\nimport { TableContext } from '../context/TableProvider'\r\n\r\nexport const NavBar = () => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const { setTableType } = useContext(TableContext)\r\n\r\n    return (\r\n        <div id=\"navbar\">\r\n            <MDBNavbar color=\"default-color\" expand=\"md\" dark>\r\n                <MDBNavbarBrand>\r\n                    <strong className=\"white-text\">Projectify</strong>\r\n                </MDBNavbarBrand>\r\n                <MDBNavbarToggler onClick={() => setIsOpen(!isOpen)} />\r\n                <MDBCollapse isOpen={isOpen} navbar>\r\n                    <MDBNavbarNav left>\r\n                        <MDBNavItem>\r\n                            <MDBDropdown>\r\n                                <MDBDropdownToggle nav caret>\r\n                                    Tables\r\n                                </MDBDropdownToggle>\r\n                                <MDBDropdownMenu className=\"default-color\">\r\n                                    <MDBDropdownItem\r\n                                        className=\"default-color\"\r\n                                        tag={MDBNavLink}\r\n                                        to=\"/projectify/student\"\r\n                                        onClick={() => setTableType('student')}\r\n                                    >\r\n                                        Student\r\n                                    </MDBDropdownItem>\r\n                                    <MDBDropdownItem\r\n                                        className=\"default-color\"\r\n                                        tag={MDBNavLink}\r\n                                        to=\"/projectify/class\"\r\n                                        onClick={() => setTableType('class')}\r\n                                    >\r\n                                        Class\r\n                                    </MDBDropdownItem>\r\n                                    <MDBDropdownItem\r\n                                        className=\"default-color\"\r\n                                        tag={MDBNavLink}\r\n                                        to=\"/projectify/project\"\r\n                                        onClick={() => setTableType('project')}\r\n                                    >\r\n                                        Project\r\n                                    </MDBDropdownItem>\r\n                                    <MDBDropdownItem\r\n                                        className=\"default-color\"\r\n                                        tag={MDBNavLink}\r\n                                        to=\"/projectify/major\"\r\n                                        onClick={() => setTableType('major')}\r\n                                    >\r\n                                        Major\r\n                                    </MDBDropdownItem>\r\n                                    <MDBDropdownItem\r\n                                        className=\"default-color\"\r\n                                        tag={MDBNavLink}\r\n                                        to=\"/projectify/department\"\r\n                                        onClick={() =>\r\n                                            setTableType('department')\r\n                                        }\r\n                                    >\r\n                                        Department\r\n                                    </MDBDropdownItem>\r\n                                </MDBDropdownMenu>\r\n                            </MDBDropdown>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBNavLink to=\"#\">Reports</MDBNavLink>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                </MDBCollapse>\r\n            </MDBNavbar>\r\n        </div>\r\n    )\r\n}\r\n","import { MDBIcon, MDBBtn } from 'mdbreact'\r\n\r\nexport const EditDeleteButton = ({ onEdit, onDelete }) => (\r\n    <div className=\"flex justify-around\">\r\n        <MDBBtn floating size=\"sm\" color=\"blue-grey\" onClick={onEdit}>\r\n            <MDBIcon icon=\"edit\" />\r\n        </MDBBtn>\r\n\r\n        <MDBBtn floating size=\"sm\" color=\"blue-grey\" onClick={onDelete}>\r\n            <MDBIcon icon=\"trash\" />\r\n        </MDBBtn>\r\n    </div>\r\n)\r\n","export const studentHeader = [\r\n    {\r\n        label: 'Name',\r\n        field: 'name',\r\n        sort: 'asc',\r\n        width: 200,\r\n    },\r\n    {\r\n        label: 'Age',\r\n        field: 'age',\r\n        sort: 'asc',\r\n        width: 75,\r\n    },\r\n    {\r\n        label: 'Major',\r\n        field: 'major',\r\n        sort: 'asc',\r\n        width: 200,\r\n    },\r\n    {\r\n        label: 'Email',\r\n        field: 'email',\r\n        sort: 'asc',\r\n        width: 250,\r\n    },\r\n    {\r\n        label: 'Edit/Delete',\r\n        field: 'button',\r\n        width: 200,\r\n    },\r\n]\r\n\r\nexport const classHeader = [\r\n    {\r\n        label: 'Course Num',\r\n        field: 'course-num',\r\n        sort: 'asc',\r\n        width: 120,\r\n    },\r\n    {\r\n        label: 'Department',\r\n        field: 'department',\r\n        sort: 'asc',\r\n        width: 200,\r\n    },\r\n    {\r\n        label: 'Name',\r\n        field: 'name',\r\n        sort: 'asc',\r\n        width: 200,\r\n    },\r\n    {\r\n        label: 'Size',\r\n        field: 'size',\r\n        sort: 'asc',\r\n        width: 75,\r\n    },\r\n    {\r\n        label: 'Instructor',\r\n        field: 'instructor',\r\n        sort: 'asc',\r\n        width: 200,\r\n    },\r\n    {\r\n        label: 'Edit/Delete',\r\n        field: 'button',\r\n        width: 200,\r\n    },\r\n]\r\n\r\nexport const projectHeader = [\r\n    {\r\n        label: 'Name',\r\n        field: 'name',\r\n        sort: 'asc',\r\n        width: 200,\r\n    },\r\n    {\r\n        label: 'Points',\r\n        field: 'points',\r\n        sort: 'asc',\r\n        width: 75,\r\n    },\r\n    {\r\n        label: 'Group Size',\r\n        field: 'group-size',\r\n        sort: 'asc',\r\n        width: 100,\r\n    },\r\n    {\r\n        label: 'Edit/Delete',\r\n        field: 'button',\r\n        width: 200,\r\n    },\r\n]\r\n\r\nexport const majorHeader = [\r\n    {\r\n        label: 'Major ID',\r\n        field: 'majorId',\r\n        sort: 'asc',\r\n        width: 120,\r\n    },\r\n    {\r\n        label: 'Name',\r\n        field: 'name',\r\n        sort: 'asc',\r\n        width: 200,\r\n    },\r\n    {\r\n        label: 'Edit/Delete',\r\n        field: 'button',\r\n        width: 200,\r\n    },\r\n]\r\n\r\nexport const departmentHeader = [\r\n    {\r\n        label: 'Department ID',\r\n        field: 'departmentId',\r\n        sort: 'asc',\r\n        width: 120,\r\n    },\r\n    {\r\n        label: 'Name',\r\n        field: 'name',\r\n        sort: 'asc',\r\n        width: 200,\r\n    },\r\n    {\r\n        label: 'Edit/Delete',\r\n        field: 'button',\r\n        width: 200,\r\n    },\r\n]\r\n\r\nexport const tableHeaderChooser = {\r\n    student: studentHeader,\r\n    class: classHeader,\r\n    project: projectHeader,\r\n    major: majorHeader,\r\n    department: departmentHeader,\r\n}\r\n","import { MDBDataTableV5 } from 'mdbreact'\r\nimport { EditDeleteButton } from './EditDeleteButton'\r\nimport { tableHeaderChooser } from '../constants/headers'\r\nimport { useContext } from 'react'\r\nimport { TableContext } from '../context/TableProvider'\r\n\r\nexport const DynamicTable = (props) => {\r\n    const { tableType, data } = useContext(TableContext)\r\n    const dataObj = data[tableType] || {}\r\n    const studentData = {\r\n        columns: tableHeaderChooser[tableType],\r\n        rows: (dataObj['table'] || []).map((obj) => ({\r\n            ...obj,\r\n            button: <EditDeleteButton />,\r\n        })),\r\n    }\r\n\r\n    if (tableType === undefined) {\r\n        return <div></div>\r\n    }\r\n\r\n    return (\r\n        <div id=\"table\" className=\"mt-5 mr-auto ml-auto\">\r\n            <MDBDataTableV5 {...props} data={studentData} />\r\n        </div>\r\n    )\r\n}\r\n","import { InputRow } from '../components/InputRow'\r\nimport { NavBar } from '../components/NavBar'\r\nimport { DynamicTable } from '../components/DynamicTable'\r\nimport { Fragment, useContext, useEffect } from 'react'\r\nimport { TableContext } from '../context/TableProvider'\r\nimport { tableHeaderChooser } from '../constants/headers'\r\nimport useFetch from 'react-fetch-hook'\r\n\r\nconst test = [\r\n    {\r\n        name: 'Bob Mars',\r\n        age: 21,\r\n        major: 'Computer Science',\r\n        email: 'bmars1@purdue.edu',\r\n    },\r\n    {\r\n        name: 'Bob Mars',\r\n        age: 20,\r\n        major: 'Computer Science',\r\n        email: 'bmars2@purdue.edu',\r\n    },\r\n    {\r\n        name: 'James Bond',\r\n        age: 44,\r\n        major: 'Math',\r\n        email: 'jbond@purdue.edu',\r\n    },\r\n]\r\n\r\nexport const TablesPage = () => {\r\n    const { setTableType, data } = useContext(TableContext)\r\n    //TODO: fill this with data\r\n    const studentFetch = useFetch('', {\r\n        depends: [],\r\n    })\r\n    const classFetch = useFetch('', {\r\n        depends: [],\r\n    })\r\n    const projectFetch = useFetch('', {\r\n        depends: [],\r\n    })\r\n    const departmentFetch = useFetch('', {\r\n        depends: [],\r\n    })\r\n    const majorFetch = useFetch('', {\r\n        depends: [],\r\n    })\r\n\r\n    const dataObject = {\r\n        student: test,\r\n        class: classFetch.data,\r\n        project: projectFetch.data,\r\n        department: departmentFetch.data,\r\n        major: majorFetch.data,\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTableType(window.location.pathname.substring(1) || undefined)\r\n        console.log(\r\n            studentFetch.isLoading,\r\n            classFetch.isLoading,\r\n            projectFetch.isLoading,\r\n            departmentFetch.isLoading,\r\n            majorFetch.isLoading\r\n        )\r\n        if (\r\n            !studentFetch.isLoading &&\r\n            !classFetch.isLoading &&\r\n            !projectFetch.isLoading &&\r\n            !departmentFetch.isLoading &&\r\n            !majorFetch.isLoading\r\n        ) {\r\n            Object.entries(tableHeaderChooser).map((keyVal) =>\r\n                data[keyVal[0]].setTable(dataObject[keyVal[0]])\r\n            )\r\n        }\r\n    }, [\r\n        studentFetch.isLoading,\r\n        classFetch.isLoading,\r\n        projectFetch.isLoading,\r\n        departmentFetch.isLoading,\r\n        majorFetch.isLoading,\r\n    ])\r\n\r\n    return (\r\n        <Fragment>\r\n            <NavBar />\r\n            <div id=\"flex\" className=\"d-flex flex-column\">\r\n                <InputRow />\r\n                <div className=\"bt blue-grey-text\"> </div>\r\n                <DynamicTable\r\n                    autoWidth\r\n                    scrollY\r\n                    scrollX\r\n                    maxHeight=\"50vh\"\r\n                    striped\r\n                    sortable={false}\r\n                    responsive\r\n                />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { BrowserRouter as Router } from 'react-router-dom'\nimport { TablesPage } from './pages/TablesPage'\nimport { TableProvider } from './context/TableProvider'\n\nconst App = () => {\n    return (\n        <Router>\n            <div className=\"App\">\n                <TableProvider>\n                    <TablesPage />\n                </TableProvider>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport '@fortawesome/fontawesome-free/css/all.min.css'\nimport 'bootstrap-css-only/css/bootstrap.min.css'\nimport 'mdbreact/dist/css/mdb.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}